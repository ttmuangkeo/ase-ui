{"ast":null,"code":"import Vue from 'vue';\nimport Vuex, { Store } from 'vuex';\nVue.use(Vuex);\nexport default new Vuex.Store({\n  state: {\n    drawingManager: null,\n    drawnEntities: [],\n    customLayerResponse: null,\n    currentCustomLayer: {},\n    layerDrawn: false,\n    newlyDrawnObject: [],\n    allBoundaries: {},\n    drawnBoundaries: []\n  },\n  mutations: {\n    updateDrawingManager: function updateDrawingManager(store, val) {\n      store.drawingManager = val;\n    },\n    updateDrawnEntities: function updateDrawnEntities(store, val) {\n      store.drawnEntities = val;\n    },\n    updateCustomLayerResponse: function updateCustomLayerResponse(store, val) {\n      store.customLayerResponse = val;\n    },\n    updateCurrentCustomLayer: function updateCurrentCustomLayer(store, val) {\n      store.currentCustomLayer = val;\n    },\n    updateLayerDrawn: function updateLayerDrawn(store, val) {\n      store.layerDrawn = val;\n    },\n    updateNewlyDrawnObject: function updateNewlyDrawnObject(store, obj) {\n      store.newlyDrawnObject.push(obj);\n    },\n    resetNewlyDrawnObject: function resetNewlyDrawnObject(store) {\n      store.newlyDrawnObject = [];\n    },\n    updateAllBoundaries: function updateAllBoundaries(store, val) {\n      store.allBoundaries = val;\n    },\n    updateDrawnBoundaries: function updateDrawnBoundaries(store, val) {\n      store.drawnBoundaries = val;\n    }\n  },\n  getters: {\n    drawingManager: function drawingManager(store) {\n      return store.drawingManager;\n    },\n    drawnEntities: function drawnEntities(store) {\n      return store.drawnEntities;\n    },\n    customLayerResponse: function customLayerResponse(store) {\n      return store.customLayerResponse;\n    },\n    currentCustomLayer: function currentCustomLayer(store) {\n      return store.currentCustomLayer;\n    },\n    layerDrawn: function layerDrawn(store) {\n      return store.layerDrawn;\n    },\n    getNewlyDrawnObject: function getNewlyDrawnObject(store) {\n      return store.newlyDrawnObject;\n    },\n    allBoundaries: function allBoundaries(store) {\n      return store.allBoundaries;\n    },\n    drawnBoundaries: function drawnBoundaries(store) {\n      return store.drawnBoundaries;\n    }\n  }\n});","map":{"version":3,"sources":["/Users/timmuangkeo/Desktop/fork/LayerDraw copy/app/javascript/data/Store.js"],"names":["Vue","Vuex","Store","use","state","drawingManager","drawnEntities","customLayerResponse","currentCustomLayer","layerDrawn","newlyDrawnObject","allBoundaries","drawnBoundaries","mutations","updateDrawingManager","store","val","updateDrawnEntities","updateCustomLayerResponse","updateCurrentCustomLayer","updateLayerDrawn","updateNewlyDrawnObject","obj","push","resetNewlyDrawnObject","updateAllBoundaries","updateDrawnBoundaries","getters","getNewlyDrawnObject"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,IAAP,IAAeC,KAAf,QAA4B,MAA5B;AAEAF,GAAG,CAACG,GAAJ,CAAQF,IAAR;AAEA,eAAe,IAAIA,IAAI,CAACC,KAAT,CAAe;AAC5BE,EAAAA,KAAK,EAAE;AACNC,IAAAA,cAAc,EAAE,IADV;AAENC,IAAAA,aAAa,EAAE,EAFT;AAGNC,IAAAA,mBAAmB,EAAE,IAHf;AAINC,IAAAA,kBAAkB,EAAE,EAJd;AAKNC,IAAAA,UAAU,EAAE,KALN;AAMNC,IAAAA,gBAAgB,EAAE,EANZ;AAONC,IAAAA,aAAa,EAAE,EAPT;AAQNC,IAAAA,eAAe,EAAE;AARX,GADqB;AAW5BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,oBADS,gCACYC,KADZ,EACmBC,GADnB,EACwB;AAC/BD,MAAAA,KAAK,CAACV,cAAN,GAAuBW,GAAvB;AACD,KAHQ;AAITC,IAAAA,mBAJS,+BAIWF,KAJX,EAIkBC,GAJlB,EAIuB;AAC9BD,MAAAA,KAAK,CAACT,aAAN,GAAsBU,GAAtB;AACD,KANQ;AAOTE,IAAAA,yBAPS,qCAOiBH,KAPjB,EAOwBC,GAPxB,EAO6B;AACpCD,MAAAA,KAAK,CAACR,mBAAN,GAA4BS,GAA5B;AACD,KATQ;AAUTG,IAAAA,wBAVS,oCAUgBJ,KAVhB,EAUuBC,GAVvB,EAU4B;AACnCD,MAAAA,KAAK,CAACP,kBAAN,GAA2BQ,GAA3B;AACD,KAZQ;AAaTI,IAAAA,gBAbS,4BAaQL,KAbR,EAaeC,GAbf,EAaoB;AAC3BD,MAAAA,KAAK,CAACN,UAAN,GAAmBO,GAAnB;AACD,KAfQ;AAgBTK,IAAAA,sBAhBS,kCAgBcN,KAhBd,EAgBqBO,GAhBrB,EAgB0B;AACjCP,MAAAA,KAAK,CAACL,gBAAN,CAAuBa,IAAvB,CAA4BD,GAA5B;AACD,KAlBQ;AAmBTE,IAAAA,qBAnBS,iCAmBaT,KAnBb,EAmBoB;AAC3BA,MAAAA,KAAK,CAACL,gBAAN,GAAyB,EAAzB;AACD,KArBQ;AAsBTe,IAAAA,mBAtBS,+BAsBWV,KAtBX,EAsBkBC,GAtBlB,EAsBuB;AAC9BD,MAAAA,KAAK,CAACJ,aAAN,GAAsBK,GAAtB;AACD,KAxBQ;AAyBTU,IAAAA,qBAzBS,iCAyBaX,KAzBb,EAyBoBC,GAzBpB,EAyByB;AAChCD,MAAAA,KAAK,CAACH,eAAN,GAAwBI,GAAxB;AACD;AA3BQ,GAXiB;AAwC5BW,EAAAA,OAAO,EAAE;AACPtB,IAAAA,cAAc,EAAE,wBAACU,KAAD;AAAA,aAAWA,KAAK,CAACV,cAAjB;AAAA,KADT;AAEPC,IAAAA,aAAa,EAAE,uBAACS,KAAD;AAAA,aAAWA,KAAK,CAACT,aAAjB;AAAA,KAFR;AAGPC,IAAAA,mBAAmB,EAAE,6BAACQ,KAAD;AAAA,aAAWA,KAAK,CAACR,mBAAjB;AAAA,KAHd;AAIPC,IAAAA,kBAAkB,EAAE,4BAACO,KAAD;AAAA,aAAWA,KAAK,CAACP,kBAAjB;AAAA,KAJb;AAKPC,IAAAA,UAAU,EAAE,oBAACM,KAAD;AAAA,aAAWA,KAAK,CAACN,UAAjB;AAAA,KALL;AAMPmB,IAAAA,mBAAmB,EAAE,6BAACb,KAAD;AAAA,aAAWA,KAAK,CAACL,gBAAjB;AAAA,KANd;AAOPC,IAAAA,aAAa,EAAE,uBAACI,KAAD;AAAA,aAAWA,KAAK,CAACJ,aAAjB;AAAA,KAPR;AAQPC,IAAAA,eAAe,EAAE,yBAACG,KAAD;AAAA,aAAWA,KAAK,CAACH,eAAjB;AAAA;AARV;AAxCmB,CAAf,CAAf","sourcesContent":["import Vue from 'vue';\nimport Vuex, { Store } from 'vuex';\n\nVue.use(Vuex);\n\nexport default new Vuex.Store({\n  state: {\n   drawingManager: null,\n   drawnEntities: [],\n   customLayerResponse: null,\n   currentCustomLayer: {},\n   layerDrawn: false,\n   newlyDrawnObject: [],\n   allBoundaries: {},\n   drawnBoundaries: []\n  },\n  mutations: {\n    updateDrawingManager(store, val) {\n      store.drawingManager = val;\n    },\n    updateDrawnEntities(store, val) {\n      store.drawnEntities = val;\n    },\n    updateCustomLayerResponse(store, val) {\n      store.customLayerResponse = val;\n    },\n    updateCurrentCustomLayer(store, val) {\n      store.currentCustomLayer = val;\n    },\n    updateLayerDrawn(store, val) {\n      store.layerDrawn = val;\n    },\n    updateNewlyDrawnObject(store, obj) {\n      store.newlyDrawnObject.push(obj);\n    },\n    resetNewlyDrawnObject(store) {\n      store.newlyDrawnObject = [];\n    },\n    updateAllBoundaries(store, val) {\n      store.allBoundaries = val\n    },\n    updateDrawnBoundaries(store, val) {\n      store.drawnBoundaries = val\n    }\n  },\n  getters: {\n    drawingManager: (store) => store.drawingManager,\n    drawnEntities: (store) => store.drawnEntities,\n    customLayerResponse: (store) => store.customLayerResponse,\n    currentCustomLayer: (store) => store.currentCustomLayer,\n    layerDrawn: (store) => store.layerDrawn,\n    getNewlyDrawnObject: (store) => store.newlyDrawnObject,\n    allBoundaries: (store) => store.allBoundaries,\n    drawnBoundaries: (store) => store.drawnBoundaries\n  },\n});\n"]},"metadata":{},"sourceType":"module"}